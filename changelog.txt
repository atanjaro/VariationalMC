(updated 01/19):
TODO: set initial Jastrow parameters to 0.0, unless read-in values are specified
TODO: add method to update Jastrow pseudopotentials (specifically update jpar_matrix) and track it's history over N_updates
TODO: add method to update vparr and track it's history over N_updates
TODO: need to loop over number of vpars being optimized during local_update!()
TODO: add test for parameter convergence
TODO: update neighbor loop in measure_local_energy()
TODO: change parameters to be optimized to a NamedTuple
TODO: update get_SR_comatrix() and get_SR_forces(). To do this, may need to update method for derivatives and to get the local energy

------------------------------------------------------------------------------------------------------------------------------


Change log (11/30):
Updated method of performing variational parameter derivative, slater_derivative() (VMC.jl) 
Fixed Metropolis updating, metropolis(). propose_random_hop() deprecated (VMC.jl)
Prototyped measurements (Measurements.jl)
Updated get_equal_time_greens() to use LU factorization instead inversion (Hamiltonian.jl)
Updated build_tight_binding_model() to only include chemical potential term if not being optimized(Hamiltonian.jl)
Updated build_variational_terms() to also return variational operators, V (Hamiltonian.jl)
Updated method of getting variational parameter matrices, get_Ak_matrices() (Hamiltonian.jl)
Added VariationalParameter constructor and updated method of variational parameter definition (Hamiltonian.jl)
Removed optimization flags. If parameter is named in vector, it will be optimized (Hamiltonian.jl)

Change log (12/04):
Created Utilities.jl to house various external matrix functions: diagonalize(), is_invertible(), complex_zeros()
Created the complex_zeros() function to generalize matrices to have complex elements (Utilities.jl)


Change log (12/05):
Moved all Green's function related functions to Greens.jl
Moved is_open_shell() to Utilities.jl
Added method for updating equal-time Green's function (Greens.jl)

Change log (12/07):
Fixed bug where matrices when Lx or Ly = 1, 2 and Lx > Ly or Ly > Lx were being written incorrectly.
Created StochasticReconfiguration.jl to house all functions pertaining to SR. 
VMC.jl now only has stuff pertaining to local updates.
Changed build_slater_determinant() to build_determinantal_state(), as this is more accurate (Hamiltonian.jl)
Changed local_slater_derivative() to local_determinantal_derivative(), as it is more accurate (StochasticReconfiguration.jl)


Change log (01/10):
Created function prototypes related to SR/parameter updating including get_SR_matrix(), get_SR_forces(), parameter_gradient(), 
      and parameter_update!() (StochasticReconfiguration.jl)
Fixed implementation get_Ak_matrices(), which also fixes the scaling issue (Hamiltonian.jl)
Updated local_determinantal_derivative() and local_jastrow_derivative() methods (StochasticReconfiguration.jl)
Created the Jastrow type (Jastrow.jl)
Updated build_jastrow_factor() method. Function now creates an instance of the Jastrow type (Jastrow.jl)

Change log (01/11):
Updated the definition of 'η' to rflect its role as a a stabilization factor. Added 'dt', which is the initial SR optimization rate (run_simulation.jl)
Upadted measure_double_occ(), measure_local_energy() (Measurements.jl)
Changed get_SR_matrix() to get_SR_comatrix() (StochasticReconfiguration.jl)

Change log (01/19):
Updated do_particle_hop!() (VMC.jl)

Change log (01/24):
Updated recalc_equal_greens() and added maximum allowed error in Green's function as a stabilization factor (Greens.jl and run_simulation.jl)
Added recalc_Tvec() for numerical stabilization (Jastrow.jl)
Updated measurment initialization (Measurments.jl)

Change log (01/31):
Updated methods for performing Green's function floating point error check (Greens.jl)
Updated methods for performing T vector floating point error check (Greens.jl)
Changed type VariationalParameter to DeterminantalParameters (Hamiltonian.jl)
Changed instances of variational_parameters to determinantal_parameters, as the latter is more accurate. variational_parameters for here on will only be 
      used to refer to determinantal_parameters+jastrow_parameters (Hamiltonian.jl, run_simulation.jl)
Added num_detpars to definition of DeterminantalParameters (Hamiltonian.jl)
Created method to find total number of variational_parameters get_num_vpars() (Utilities.jl)
Updated get_SR_comatrix() and get_SR_forces() methods (StochasticReconfiguration.jl)


Change log (02/12):
Changed the name of functions get_SR_matrix(), get_SR_forces(), and parameter_update!() to get_sr_matrix(), get_sr_forces(), and sr_update!(), respectively (StochasticReconfiguration.jl)
Updated definition of measure_local_energy() to properly loop over nearest neighbors of particle β (Measurements.jl)
Moved derivative measurements to Measurements.jl, as they make more sense there
Changed local_determinantal_derivative() and local_jastrow_derivative() to measure_local_detpar_derivative() and measure_local_jpar_derivative(), respectively (Measurements.jl)


Change log (02/26):
Updated Jastrow type and add function map_jpars(), to more easily track Jastrow parameters (Jastrow.jl)


Change log (04/22):
Updated some function defintiions in Jastrow.jl
Updated some measurement schemes in Measurements.jl
Created src directory
Created test directory

Change log (04/23):
Begin adding unit tests for each module
Fixed bug in get_particle_numbers() where ndn was being calculated incorrectly

Change log (04/24):
Added initialize_measurement_container() and initialize_measurements!() to Measurements.jl
Updated definitions of measure_local_energy() and get_jastrow_ratio()
Updated do_particle_hop!() into a mutating function
Minor definitional update to update_particle_posistions!()
Updated local_update!() to local_fermion_update!()

Updated initialize_measurement_container() to also hold measurements of the local derivatives. These are not written to scalar measurements because they are not a usual observable

Change log (05/07):
Updated measurements to also record value of variational derivatives
Updated metropolis() to also have arguments of 'W' and 'jastrow' and created additional versions which accepts mutiple Jastrow factors
Updated generate_initial_onsite_phonon_configuration() to have the maximum upper bound be typemax(Int) (basically Inf)
Updated generate_initial_bond_phonon_configuration() to have the maximum upper bound be typemax(Int) (basically Inf)

Change log (05/08):
Updated methods for Jastrow factors and associated updates
Updated metropolis() as previous retrieval of the Green's function element resulted in every proposed hop being rejected
Added function measure_Δk() which returns all derivatives of all variational parameters
Added function measure_measure_ΔkE() to return the product of log derivatives with the local energy
Added function measure_ΔkΔkp() to return the product of log derivatives

Upcoming changes: 
Need to update_equal_greens!() method as there is currently a dimension mistmatch when performing the update FIXED ON 05/10
New bug found: need to re-check how the code checks for singular configurations during the initial config step
Maybe add a new type(s) for performing measurements?

Change log (05/10, 05/21):
Fixed bug in update_equal_greens!(), as the outer product was not being taken correctly
Performed test of local_fermion_update!() up to parameter tracking
Re-updated metropolis() method to also handle multiple jastrow factors
Changed measure_derivatives() functions to get_derivatives(), and changed measure_local_energy() to get_local_energy(). Any
      instance of measure will mean that the value is tracked in the measurement container
Updated measurement container to separate derivative measurments as it's own sub-container also changed 'global_measurements' to 'expectation', 
      as this makes more sense and will not get confused with the true global value at the end of the simulation
Updated measure_() methods to write local values to the measurement container

Upcoming changes: 
Need to factor in binning for the measurment container (should be simple change)
Need to update SR method accounting for changes in measurements (SR matrix, vector population)

Change log (05/22):
Updated method for calculating SR force vector 
Updated method for calculating SR covariance matrix
Updated the measure_ΔkΔkp!() method
Moved get_parameter_indices() function to Utilities.jl
Added cat_vpars() function to Utilities.jl for combining all variational parameters 
Updated parameter_gradient() method

Upcoming changes:
Need to factor in binning for the measurment container (should be simple change)
Add tracking (measurements) of  variational parameters

Change log (05/23):
Added parameter tracking to measurement container


Change log (06/05):

Upcoming changes:
Need to debug sr_update!() method. There seems to be an issue with the measurement of the local derivatives.

Change log (06/11):
Fixed bug in initializing the measurement container, where the initial variational parameters were not initialized correctly.
Fixed variational parameter derivative initialization in the measurement container.
Fixed bug in measurement of local derivatives in the sr_update!() method.
Updated the initialize_measurement_container() method to ensure seperate arrays for each measurement.
measure_Δk!() method has been debugged and updated.
measure_ΔkΔkp!() method has debugged and updated. 
Changed the variable 'U' for the matrix which diagonalizes H_MF to 'P' to avoid conflict with the Hubbard 'U' (why I didn't realize this before,
      I'm not sure)
Updated get_local_energy() method, where the Hubbard energy could not be computed due to the aformentioned bug.
measure_ΔkE!() method has beedn debugged and updated.
measure_local_energy!() method has been updated.


Upcoming changes:
Check propagation of iterations through the course of all updates.


Change log (06/18):
Fixed get_sr_forces() method, which had previous issue retrieving the local energy.
Fixed parameter_gradient() method, which was incorrectly adding the small variaiton for stabilization. Also fixed issue with the solving of the
      matrix equation required to get the variation of the parameters.

With these fixes, the local_fermion_update!() method is now operational!

Upcoming changes:
Need to check acceptance rates of the local fermion update
Need to re-re-check the starting configuration of the simulations i.e. checking that we do not start on the singular configuration.
Need to check numerical stabilization routines.
Need to implement binning!
Need to add write_measurments!() method

Change log (07/18):
Updated Jastrow keys and methods to include electron-phonon density-displacement and phonon density-density Jastrow factors:
      "e-den-den"   - electron density-density 
      "e-spn-spn"   - electron spin-spin
      "ph-dsp-dsp"  - phonon displacement-displacement
      "eph-den-den" - electron-phonon density-density
      "eph-den-dsp" - electron-phonon density-displacement.
Updated local_fermion_update!() to return acceptance rate and fixed number of moves per update.
Started creating multi-Jastrow factor versions of dependent functions :
      local_fermion_update!(model_geometry, tight_binding_model, jastrow1, jastrow2, pconfig, rng) - 
      get_local_energy(model_geometry, tight_binding_model, jastrow1, jastrow2, pconfig)
Updated verbose printouts.
Updated invertibility check method to determine whether starting configuration is singular.

Upcoming changes:
BUGFIX: There is a new bug in performing SR (sr_update!()) related to the meaasurement of (measure_Δk!()). The specific error is:
            ERROR: MethodError: no method matching +(::Float64, ::Nothing)
Need to check cases where all updates are rejected?


Change log (07/19):
Fixed bug in get_local_jpar_derivative() where the Jastrow keys had not yet been updated.
Updated 'μ' to 'μ_BCS'.
Added ability to specify charge and spin stripe initial states.

Upcoming changes:
Need to check acceptance rates. 


Change log (07/22):
Re-organized the structure of run_simulation.jl, which now has examples of different wavefunctions.

Upcoming changes:
BUG: During some simulation runtimes, a particle is mysteriously removed from 'pconfig', causing a reduction 
     in size of 'particle_positions', creating a bounds error. Must figure out why this 'leak' is occuring.

Change log (07/24):
Streamlined get_particle_numbers() and get_particle_density() functions.

Upcoming changes:
BUG: During some simulation runtimes, a particle is mysteriously removed from 'pconfig', causing a reduction 
     in size of 'particle_positions', creating a bounds error. Must figure out why this 'leak' is occuring. This only affects
     simulations randomly
BUG: parameter values are NOT being updated during the Monte Carlo cycles.

Change log (07/25):
Updated initialize_measurement_container() method to store vectors of variational parameter values in parameter_measurements.
Updated sr_update!() to push updated variational parameter values during Monte Carlo cycles.
do_particle_hop!() method moved to ParticleConfiguration.jl.
BUGFIX: fixed random neighbor selection in metropolis()
BUGFIX: do_particle_hop!() method was not accouting for spin species when hopping, thus particle_positions was fluctuating in size.

Upcoming changes:
Optimization of various functions.
Adding binning functionality to measurement container.
Add write_measurements!() method.


Change log (07/26):
Optimized and updated Greens.jl
      Optimized get_equal_greens() method.
      Optimzed update_equal_greens!() method.
      Optimized and updated recalc_equal_greens() method to account for change in D during simulation.
      Moved build_determinantal_state() method to Greens.jl.
      Optimized build_determinantal_state() method.

Optimized and updated ParticleConfiguration.jl
      Changed 'generate_initial_electron_configuration()' method to 'generate_initial_fermion_configuration()'.
      Optimized generate_initial_fermion_configuration() method.
      Optimized get_spindex_type() method.
      Optimized get_index_from_spindex() method.
      Optimized get_spindices_from_index() method.

Optimized and updated Jastrow.jl
      Optimized get_distances() method.
      Optimized set_jpars!() method.


Upcoming changes:
Update Jastrow parameter updating/organization.
Adding binning functionality to measurement container.
Add write_measurements!() method.
